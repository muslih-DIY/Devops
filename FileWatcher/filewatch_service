#!/bin/bash
#Purpose: you can make all your script run using service 
#Version:
#Created Date: Wed May 16 19:31:50 IST 2018
#Modified Date:
#Author: muslih k
# START #

appname=FileWatcher
directory=/Projects/file_watcher
execu=$directory/watchman.sh
pid=$directory/$appname.pid
logfile=$directory/$appname.log


RED='\033[0;31m'
GR='\033[0;32m'
YL='\033[0;33m'
NC='\033[0m' # No Color

source ~/.bashrc
arg2=$2


case "$1" in
start)
   if [[ -d $arg2 ]]; then
      echo "watching $PASSED  Directory" 
   elif [[ -f $arg2 ]]; then
      echo "watching $PASSED  file" 
   else
      echo 0:$appname starting is FAILED
      printf "${RED}[FAILED]${NC}\n"
      printf "${RED}Argument 2 is not a valid file or directory${NC}\n"
      exit 1
   fi

   if [ -e "$pid" ];then
        pidval=$(cat $pid | awk '{print$1}')
        if [[ "$(ps -aux | grep $pidval |grep -c $execu)" -eq 1 ]]; then
          echo 0:$appname is already running, on pid=`cat $pid`
          printf "${YL}[Already Running]${NC} \n"
          exit 1
        fi
   fi
   echo $appname is starting..
   echo "start on" $(date) >> $logfile
   bash $execu $arg2 >> $logfile 2>&1 &
   pidval=$!
   echo $pidval
   sleep 1
   if [[ "$(ps -aux | grep $pidval |grep -c $execu)" -eq 1 ]]; then

          touch $pid
          filecheckpid=$(ps -aux | grep -v grep |grep inotifywait |grep "$arg2" | awk '{print$2}')
          echo $pidval $filecheckpid >$pid
          echo 1:$appname is started, on pid=`cat $pid`
          printf "${GR}[Started]${NC}\n"
          exit 0
   else
          echo 0:$appname is NOT started
          printf "${RED}[FAILED]${NC}\n"
          rm -f $pid
          exit 1
   fi
   ;;
stop)

   if [ -e "$pid" ];then
        pidval=$(cat $pid | awk '{print$1}')
        if [[ "$(ps -aux | grep $pidval |grep -c $execu)" -eq 1 ]]; then
                echo $appname is stoping...
                kill `cat $pid`
                rm -f $pid
                printf "${RED}[Stoped]${NC}\n"
                exit 0
        else
                echo 0:$appname is NOT running
                printf "${RED}[Inactive]${NC}\n"
                rm -f $pid
                exit 0
        fi
   else
        echo 0:$appname is NOT running
        printf "${RED}[Inactive]${NC}\n"
   fi
   ;;
restart)
   $0 stop
   $0 start
   ;;
status)
   if [ -e "$pid" ];then
        pidval=$(cat $pid | awk '{print$1}') 
        if [[ "$(ps -aux | grep $pidval |grep -c $execu)" -eq 1 ]]; then
        echo 1:$appname is running, pid=`cat $pid`
        printf "${GR}[Active]${NC}\n"
        else
        echo 0:$appname is NOT running
        printf "${RED}[Inactive]${NC}\n"
        rm -f $pid
        exit 1
        fi
   else
        echo 0:$appname is NOT running
        printf "${RED}[Inactive]${NC}\n"
   fi
   ;;
*)
   echo "Usage: $0 {start|stop|status|restart}"
esac

exit 0